<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">
    <!--kafka消费者配置信息-->
    <bean id="kafkaConsumerConfig" class="java.util.HashMap">
        <constructor-arg>
            <map>
                <!--kafka服务器列表-->
                <entry key="bootstrap.servers" value="${consumer.bootstrap.servers}"/>
                <!--key 序列化器-->
                <entry key="key.deserializer" value="${consumer.key.deserializer}"/>
                <!--value 序列化器-->
                <entry key="value.deserializer" value="${consumer.value.deserializer}"/>
                <!--不使用位移自动提交，用spring封装的位移处理方式-->
                <entry key="enable.auto.commit" value="${consumer.enable.auto.commit}"/>
            </map>
        </constructor-arg>
    </bean>
    <!--声明消费工厂-->
    <bean id="consumerFactory" class="org.springframework.kafka.core.DefaultKafkaConsumerFactory">
        <constructor-arg>
            <ref bean="kafkaConsumerConfig"/>
        </constructor-arg>
    </bean>
    <!--配置消息监听器 实际消费消息业务的类-->
    <bean id="consumerPorxy" class="com.newkafka.consumer.listener.KafkaServiceConsumerListener"/>
    <bean id="containerProperties" class="org.springframework.kafka.listener.config.ContainerProperties">
        <constructor-arg value="${consumer.topicName}"/>
        <!--每接收到一次消息 就 ack 一次  安全性最高 -->
        <property name="ackMode" value="RECORD"/>
        <property name="groupId" value="${consumer.groupId}"/>
        <!--处理消息的监听业务类-->
        <property name="messageListener" ref="consumerPorxy"/>
    </bean>
    <!--配置消费者容器-->
    <bean id="messageListenerContainer" class="org.springframework.kafka.listener.ConcurrentMessageListenerContainer"
          init-method="doStart">
        <constructor-arg ref="consumerFactory"/>
        <constructor-arg ref="containerProperties"/>
        <!--多线程消费-->
        <property name="concurrency" value="3"/>
    </bean>
</beans>
